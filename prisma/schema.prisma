// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String  @id @default(uuid())
  name    String? @db.VarChar()
  user_id String  @unique
  image   String?

  channel   Channel?
  following Follow[] @relation("following")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  channelId String?

  @@map("users")
}

model Stream {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  finished  Boolean  @default(false)
  archived  Boolean  @default(false)

  channel   Channel? @relation(fields: [channelId], references: [id])
  channelId String?

  @@map("streams")
}

model Follow {
  id          String  @id @default(uuid())
  following   Channel @relation("followers", fields: [followingId], references: [id])
  follower    User    @relation("following", fields: [followerId], references: [id])
  followerId  String
  followingId String

  @@map("followers")
}

model Channel {
  id       String @id @default(uuid())
  name     String
  username String @unique

  tags      String[]
  thumbnail String?  @default("https://placehold.co/600x400")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  followers Follow[] @relation("followers")
  streams   Stream[]

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@map("channels")
}
